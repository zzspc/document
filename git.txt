
??git pull：从其他的版本库(既可以是远程的也可以是本地的)将代码更新到本地，例如：'git pull origin master'就是将origin这个版本库的代码更新到本地的master主枝，该功能类似于SVN的update
????????git add：是将当前更改或者新增的文件加入到Git的索引中，加入到Git的索引中就表示记入了版本历史中，这也是提交之前所需要执行的一步，例如'git add app/model/user.rb'就会增加app/model/user.rb文件到Git的索引中
????????git rm：从当前的工作空间中和索引中删除文件，例如'git rm app/model/user.rb'
????????git commit：提交当前工作空间的修改内容，类似于SVN的commit命令，例如'git commit -m "story #3, add user model"'，提交的时候必须用-m来输入一条提交信息
????????git push：将本地commit的代码更新到远程版本库中，例如'git push origin'就会将本地的代码更新到名为orgin的远程版本库中
????????git log：查看历史日志
????????git revert：还原一个版本的修改，必须提供一个具体的Git版本号，例如'git revert bbaf6fb5060b4875b18ff9ff637ce118256d6f20'，Git的版本号都是生成的一个哈希值、
????????上面的命令几乎都是每个版本控制工具所公有的，下面就开始尝试一下Git独有的一些命令：
4、Git独有的一些命令
? ? ???git branch：对分支的增、删、查等操作，例如'git branch new_branch'会从当前的工作版本创建一个叫做new_branch的新分支，'git branch -D new_branch'就会强制删除叫做new_branch的分支，'git branch'就会列出本地所有的分支
????????git checkout：Git的checkout有两个作用，其一是在不同的branch之间进行切换，例如 'git checkout new_branch'就会切换到new_branch的分支上去;另一个功能是还原代码的作用，例如'git checkout app/model/user.rb'就会将user.rb文件从上一个已提交的版本中更新回来，未提交的内容全部会回滚


git reset bbaf6fb5060b4875b18ff9ff637ce118256d6f20 
将当前的工作目录完全回滚到指定的版本号

　git push -u origin master
　　将本地内容push到github上的那个地址上去。 第一次回参数-u

git branch -a 
查看所有分支

git branch -d dev2  
删除分支dev2

$ git push origin --delete <branchName>
在Git v1.7.0 之后，可以使用这种语法删除远程分支


git checkout -b dev     
-b参数表示创建并切换




git push -u orgin  本地dev:远程dev


表明将本地的dev分支（冒号前）push到github的dev分支（冒号后）。
如果左边不写为空，将会删除远程的右边分支。
